import Head from "next/head";
import React, { useState, useEffect } from "react";
import styles from "../styles/Home.module.css";
import Box from "@mui/material/Box";
import TextField from "@mui/material/TextField";
import Button from "@mui/material/Button";
import { connect } from 'react-redux';
import { useRouter } from 'next/router';

function Home(props) {
	const [firstName, setFirstName] = useState("");
	const [lastName, setLastName] = useState("");
  const router = useRouter();

  function handleSubmit(){
    props.inputInfos(firstName, lastName);
    router.push(`/page2?${firstName}`);
  }

  useEffect(() => { 
    props.firstName ? setFirstName(props.firstName) : setFirstName('')
    props.lastName ? setLastName(props.lastName) : setLastName('')
  },[])


	return (
		<div className={styles.container}>
			<Head>
				<title>Genderize me!</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/img/equality.png" />
			</Head>

			<main className={styles.main}>
				<video
					autoPlay
					muted
					loop
					className={styles.video}
					src="/video.mp4"
					type="video/mp4"
				></video>

				<div className={styles.formBox}>
					<div style={{ textAlign: "center" }}>
						<h1 id="title">Gender by name</h1>
					</div>
					<Box
						component="form"
						sx={{
							"& > :not(style)": { m: 5, width: "25ch" },
							input: {
								color: "white",
								borderRadius: 1,
                textAlign:"center"
							},
							"& label": { color: "white" },
						}}
						noValidate
						autoComplete="off"
					>
						<TextField
							sx={{
								".MuiInputLabel-root": { color: "white" },
							}}
							id="outlined-basic"
							label="First Name"
							variant="outlined"
							onChange={(e) => 
								setFirstName(e.target.value)
							}
							value={props.firstName? props.firstName : firstName}
						/>
						<TextField
							sx={{
								".MuiInputLabel-root": { color: "white" },
								"& label": { color: "white" },
							}}
							id="outlined-basic"
							label="Last Name"
							variant="outlined"
							color="secondary"
							onChange={(e) => {
								setLastName(e.target.value);
								console.log('yolooo',lastName);
							}}
							value={props.lastName? props.lastName : lastName}
						/>
					</Box>
					<div className={{ paddingTop: 300 }}>
						<Button variant="contained" color="error" onClick={() => {console.log('buttonLog',firstName); handleSubmit()}} >
							GO NEXT
						</Button>
					</div>
				</div>
			</main>
		</div>
	);
}

function mapDispatchToProps(dispatch) {
  return {
    inputInfos: function (firstName, lastName) {
      dispatch({ type: "submit", firstName: firstName, lastName: lastName });
    },
  };
}

function mapStateToProps(state) {
	return {
		firstName: state.inputInfos.firstName,
		lastName: state.inputInfos.lastName,
	};
}

export default connect(mapStateToProps, mapDispatchToProps)(Home);
